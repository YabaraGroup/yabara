version: '3.9'

services:
  # üö™ Traefik reverse proxy
  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.le.acme.email=yannickagbohoun@gmail.com
      - --certificatesresolvers.le.acme.storage=/etc/traefik/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
      - --api.dashboard=true
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080' # Dashboard (prot√®ge-le avec middleware basicAuth)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
      - ./traefik/acme.json:/etc/traefik/acme.json
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=Host(`traefik.yabara.co`)'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.tls.certresolver=le'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD}'
      - 'traefik.http.routers.traefik.middlewares=traefik-auth'
    restart: unless-stopped
    networks:
      - traefik
      - internal

  # üåê Frontend React
  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: client
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client.rule=Host(`yabara.co`)'
      - 'traefik.http.routers.client.entrypoints=websecure'
      - 'traefik.http.routers.client.tls.certresolver=le'
    networks:
      - traefik
      - internal

  # ‚öôÔ∏è Backend Node.js
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: server
    environment:
      - NODE_ENV=production
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.server.rule=Host(`api.yabara.co`)'
      - 'traefik.http.routers.server.entrypoints=websecure'
      - 'traefik.http.routers.server.tls.certresolver=le'
      - 'traefik.http.services.server.loadbalancer.server.port=${BACKEND_PORT}'
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - traefik
      - internal

  # üõ¢Ô∏è Base MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    command:
      - --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    networks:
      - internal

  # üõ†Ô∏è PhpMyAdmin (s√©curis√©)
  phpmyadmin:
    image: phpmyadmin:5.2
    container_name: phpmyadmin
    restart: unless-stopped
    environment:
      - PMA_HOST=mysql
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_PASSWORD}
      - UPLOAD_LIMIT=100M
      - MEMORY_LIMIT=256M
      - MAX_EXECUTION_TIME=600
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.phpmyadmin.rule=Host(`pma.yabara.co`)'
      - 'traefik.http.routers.phpmyadmin.entrypoints=websecure'
      - 'traefik.http.routers.phpmyadmin.tls.certresolver=le'
      - 'traefik.http.services.phpmyadmin.loadbalancer.server.port=80'
      - 'traefik.http.middlewares.pma-auth.basicauth.users=admin:$apr1$oY2PWlR2$sGIAzCE97lrF8.1s850Rd0'
      - 'traefik.http.routers.phpmyadmin.middlewares=pma-auth'
    networks:
      - traefik
      - internal

volumes:
  mysql_data:

networks:
  traefik:
    driver: bridge
  internal:
    driver: bridge
