services:
  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --certificatesresolvers.le.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesresolvers.le.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.le.acme.httpchallenge=true
      - --certificatesresolvers.le.acme.httpchallenge.entrypoint=web
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/traefik:/letsencrypt
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/dynamic:/dynamic:ro
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.middlewares.secure-headers.headers.framedeny=true'
      # (Optionnel) Dashboard Traefik : https://APP_HOST/traefik
      - 'traefik.http.routers.traefik.rule=Host(`${APP_HOST}`) && PathPrefix(`/traefik`)'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.entrypoints=websecure'
      - 'traefik.http.routers.traefik.tls.certresolver=le'
    restart: unless-stopped
    networks: [traefik]

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: client
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.client.rule=Host(`${APP_HOST}`)'
      - 'traefik.http.routers.client.entrypoints=websecure'
      - 'traefik.http.routers.client.tls.certresolver=le'
      - 'traefik.http.services.client.loadbalancer.server.port=80'
    depends_on: [server]
    restart: unless-stopped
    networks: [traefik, internal]

  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: server
    environment:
      - NODE_ENV=production
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.server.rule=Host(`${API_HOST}`)'
      - 'traefik.http.routers.server.entrypoints=websecure'
      - 'traefik.http.routers.server.tls.certresolver=le'
      - 'traefik.http.services.server.loadbalancer.server.port=${BACKEND_PORT}'
    depends_on: [mysql]
    restart: unless-stopped
    networks: [traefik, internal]

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    command: ['--default-authentication-plugin=mysql_native_password']
    restart: unless-stopped
    networks: [internal]

volumes:
  mysql_data:

networks:
  traefik:
  internal:
    driver: bridge
